"""
Django settings for algosms project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

import os, environ

from decouple import config

from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g7*li%5=8@4zeva==%pt!2kxd8_gg81zihwtl)&sa@@kpo&3#1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Assets Management
# ASSETS_ROOT = os.getenv('ASSETS_ROOT', '/static/assets') 

ALLOWED_HOSTS = []
# CSRF_TRUSTED_ORIGINS = ['https://algo.finoways.com']


# CORS_ALLOWED_ORIGINS = [
#     "https://algo.finoways.com",
# ]

SESSION_COOKIE_NAME = 'project1_sessionid'
CSRF_COOKIE_NAME = 'project1_csrftoken'

ASGI_APPLICATION = 'trade_project.asgi.application'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp',
    'subadmin',
    'forexadmin',
    'rest_framework',
    'django_celery_beat',
    'background_task',
    'social_django',
    'corsheaders',
]

# INSTALLED_APPS += ['django_celery_beat']

# Authentication backends
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',  # Keep the default backend
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config('GOOGLE_OAUTH2_KEY', default='924418676180-du2jilbo74arogcbb07ml7t7u0l652uv.apps.googleusercontent.com')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config('GOOGLE_OAUTH2_SECRET', default='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')

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]
# Social Auth URL Redirects
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
        # Other middleware
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    
]

ROOT_URLCONF = 'algosms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                #'django.template.context_processors.csrf',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # सोशल लॉगिन के लिए
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'algosms.wsgi.application'

# Optional: Storing extra data from Google
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

# Option to auto-create users who sign in through Google
SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS = ['gmail.com']


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
'''
DATABASES = {
     'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        "ENGINE": "django.db.backends.mysql",
        "NAME":"algosms",
        "USER":"root",
        "PASSWORD":"",
        # "HOST":"localhost",
        "HOST":"127.0.0.1",
        "PORT":"4306",
        "OPPTIONS": {
            'init command':"SET sql_mode='STRICT_TRANS_TABLES'"
        } 
    }
}
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# settings.py

# Set the max upload size to 500MB (in bytes)
DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000  # 500 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 524288000  # 500 MB


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

LOGIN_URL = 'admin_login'

LOGIN_REDIRECT_URL = '/dashboard/'  # Example redirect URL after login
LOGOUT_REDIRECT_URL = '/client_login/'     # Example redirect URL after logout

# Specify the path to your login template
LOGIN_TEMPLATE = '/client_login.html'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
from django.conf import settings

STATIC_ROOT = 'C:/live/mt4algo/staticfiles/'

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'myapp', 'static'),  # Additional static files directory
]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

from decouple import config


# from decouple import config



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'ittechnology1may2023@gmail.com'  # Your email address
EMAIL_HOST_PASSWORD = 'euva beex nuyf edqa'      # Your email password or app-specific password



LOGIN_REDIRECT_URL = 'client_dashboard'


MT5_ACCOUNTS = [
    {
        'login': '175146134',
        'password': 'Sahil@1111',
        'server': 'Exness-MT5Trail7',
    },
    # Add more accounts as needed
]


handler404 = 'myapp.views.custom_404'
handler500 = 'myapp.views.custom_500'


CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Use Redis as the broker
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'


CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Use Redis as broker (install Redis)
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

CELERY_BEAT_SCHEDULE = {
    'update-closed-trades-every-minute': {
        'task': 'myapp.tasks.update_all_closed_trades',
        'schedule': 60.0,  # Every 60 seconds
    },
}

# settings.py

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'algosms.log',
        },
    },
    'loggers': {
        'myapp': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
        'mt5_sync': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
    },
}



# Default value 2.5MB hota hai (2.5 * 1024 * 1024 bytes)
#DATA_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024  # 50 MB (example for larger video size)



'''======================  Google login setting ================'''


# GOOGLE_REDIRECT_URI = 'http://localhost:8000/accounts/google/callback/'
GOOGLE_REDIRECT_URI_LOGIN = 'https://algo.finoways.com/accounts/google/callback/'


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default backend
)

LOGIN_REDIRECT_URL = '/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout


'''======================  Facbook login setting ================'''
# Facebook Settings
FACEBOOK_CLIENT_ID = '1503279443668195'
FACEBOOK_CLIENT_SECRET = '559fa1354d9560bb560261db3ac21ccb'
FACEBOOK_REDIRECT_URI_LOGIN = 'https://algo.finoways.com/facebook/callback/'


# settings.py
CRONJOBS = [
    ('*/2 * * * *', 'django.core.management.call_command', ['update_closed_trades']),
]

# settings.py


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default backend
)

LOGIN_REDIRECT_URL = '/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout


'''======================  Facbook login setting ================'''
# Facebook Settings
FACEBOOK_CLIENT_ID = '1503279443668195'
FACEBOOK_CLIENT_SECRET = '559fa1354d9560bb560261db3ac21ccb'
FACEBOOK_REDIRECT_URI_LOGIN = 'https://algo.finoways.com/facebook/callback/'



# ===========================DRF token create code ============================
# REST Framework & Simple JWT Settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticated",
    ),
}



SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=7),
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=120),
    "ROTATE_REFRESH_TOKENS": False,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': 'C:/live/project1/cache/',
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'



OPENAI_API_KEY = ''
